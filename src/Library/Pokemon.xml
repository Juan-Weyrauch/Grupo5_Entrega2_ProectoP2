<?xml version="1.0" encoding="utf-8"?>
<documentation>
    <class name="Pokemon" namespace="ClassLibrary">
        <summary>
            La clase <c>Pokemon</c> representa a un Pokémon en el juego, incluyendo sus estadísticas, ataques y estado actual.
            La clase implementa la interfaz <c>IPokemon</c> y proporciona métodos para gestionar la salud, el estado y los ataques de un Pokémon.
        </summary>

        <properties>
            <property name="Name" type="string">
                <summary>
                    El nombre del Pokémon.
                </summary>
            </property>
            <property name="Damage" type="int">
                <summary>
                    El valor de daño que el Pokémon puede causar con sus ataques.
                </summary>
            </property>
            <property name="Defense" type="int">
                <summary>
                    La defensa del Pokémon que reduce el daño recibido de los ataques.
                </summary>
            </property>
            <property name="Health" type="int">
                <summary>
                    La salud actual del Pokémon, que disminuye con los ataques y aumenta con la curación.
                </summary>
            </property>
            <property name="Estado" type="int">
                <summary>
                    El estado del Pokémon. Los valores posibles son:
                    <list>
                        <item>0: Normal</item>
                        <item>1: Quemado</item>
                        <item>2: Envenenado</item>
                        <item>3: Paralizado</item>
                        <item>4: Dormido</item>
                    </list>
                </summary>
            </property>
            <property name="InicialHealth" type="int">
                <summary>
                    La salud inicial del Pokémon, utilizada para restaurar la salud al valor máximo cuando se cura.
                </summary>
            </property>
            <property name="Ataques" type="List&lt;IAtaque&gt;">
                <summary>
                    Una lista de los ataques que el Pokémon puede realizar.
                </summary>
            </property>
            <property name="Tipo" type="string">
                <summary>
                    El tipo de Pokémon (por ejemplo, "Fuego", "Agua", etc.).
                </summary>
            </property>
        </properties>

        <methods>
            <method name="Pokemon">
                <summary>
                    Constructor que inicializa un nuevo Pokémon con los valores proporcionados.
                </summary>
                <parameters>
                    <parameter name="name" type="string">El nombre del Pokémon.</parameter>
                    <parameter name="damage" type="int">El daño base que el Pokémon puede hacer.</parameter>
                    <parameter name="defense" type="int">La defensa base del Pokémon.</parameter>
                    <parameter name="health" type="int">La salud máxima del Pokémon.</parameter>
                    <parameter name="tipo" type="string">El tipo de Pokémon.</parameter>
                    <parameter name="ataques" type="List&lt;IAtaque&gt;">Lista de ataques disponibles para el Pokémon.</parameter>
                </parameters>
                <returns>None</returns>
                <description>
                    Inicializa un Pokémon con los valores proporcionados y establece su estado como normal (0).
                </description>
            </method>

            <method name="DecreaseHealth">
                <summary>
                    Resta vida al Pokémon después de calcular el daño recibido.
                </summary>
                <parameters>
                    <parameter name="valueAfterCalculation" type="int">El valor de daño que se restará a la salud del Pokémon.</parameter>
                </parameters>
                <returns>None</returns>
                <description>
                    Este método disminuye la salud del Pokémon y asegura que no caiga por debajo de 0.
                </description>
            </method>

            <method name="Curar">
                <summary>
                    Cura al Pokémon, restaurando su salud hasta el valor máximo inicial.
                </summary>
                <parameters>
                    <parameter name="cantidad" type="int">La cantidad de salud que se restaurará al Pokémon.</parameter>
                </parameters>
                <returns>None</returns>
                <description>
                    Este método aumenta la salud del Pokémon en la cantidad proporcionada sin exceder la salud inicial.
                </description>
            </method>

            <method name="EliminarEfectosDeEstado">
                <summary>
                    Elimina cualquier efecto de estado que afecte al Pokémon, dejando su estado como normal (0).
                </summary>
                <parameters>
                    <parameter name="None" type="None"/>
                </parameters>
                <returns>None</returns>
                <description>
                    Este método restablece el estado del Pokémon a normal, eliminando efectos como quemaduras, veneno, etc.
                </description>
            </method>
        </methods>

        <examples>
            <example>
                <code language="C#">
                    Pokemon pikachu = new Pokemon("Pikachu", 50, 30, 100, "Eléctrico", ataques);
                    pikachu.DecreaseHealth(10);
                    pikachu.Curar(5);
                </code>
                <description>
                    Este fragmento de código crea un Pokémon llamado Pikachu, le resta salud y luego lo cura.
                </description>
            </example>
        </examples>
    </class>
</documentation>
